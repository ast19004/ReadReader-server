{
  "swagger": "2.0",
  "info": {
    "description": "This is an application allows parents to track daily reading time and books read by their elementary aged children. Children get rewarded based on the quantity of time they read.",
    "version": "1.0.0",
    "title": "Read Reader"
  },
  "host": "localhost:5000",
  "basePath": "/",
  "securityDefinitions": {
    "bearerAuth": {
      "description": "Enter your token in the format <b>Bearer</b> + <b>token</b>",
      "type": "apiKey",
      "name": "Authorization",
      "scheme": "bearer",
      "bearerFormat": "JWT",
      "in": "header"
    }
  },
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/user/register": {
      "post": {
        "summary": "Add user to User database",
        "tags": ["Users"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User we want to create.",
            "schema": {
              "$ref": "#definitions/NewUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User successfully registered",
            "schema": {
              "$ref": "#definitions/User"
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "summary": "Log in a user if username and password match a user in the User database",
        "tags": ["Users"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User Login information",
            "schema": {
              "$ref": "#definitions/LoginUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Logged In",
            "schema": {
              "$ref": "#definitions/User"
            }
          },
          "400": {
            "description": "Invalid user information"
          },
          "401": {
            "description": "User not found"
          }
        }
      }
    },
    "/readers": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Readers"],
        "summary": "Gets all readers in Readers database associated with logged-in user",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#definitions/Readers"
            }
          }
        }
      }
    },
    "/reader": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Readers"],
        "summary": "Add new reader to the Reader database",
        "parameters": [
          {
            "name": "reader",
            "in": "body",
            "description": "Reader that we want to create",
            "schema": {
              "$ref": "#definitions/UpdateReader"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "New reader is created",
            "schema": {
              "#ref": "#definitions/Reader"
            }
          }
        }
      }
    },
    "/reader/{readerId}": {
      "parameters": [
        {
          "name": "readerId",
          "in": "path",
          "required": true,
          "description": "ID of targeted reader",
          "type": "string"
        }
      ],
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Use reader id to find reader in the Reader database",
        "tags": ["Readers"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#definitions/Reader"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Use reader id to update reader in User database",
        "tags": ["Readers"],
        "parameters": [
          {
            "name": "reader",
            "in": "body",
            "description": "Reader with new values",
            "schema": {
              "$ref": "#definitions/UpdateReader"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Reader is updated"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Reader not found"
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete reader by ID from Reader database and from user's reader list in the User database",
        "tags": ["Readers"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Reader is deleted",
            "schema": {
              "$ref": "#definitions/Reader"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Reader not found"
          }
        }
      }
    },
    "/reader/{readerId}/sessions": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["ReaderSessions"],
        "summary": "Gets all sessions associated with reader in session database",
        "parameters": [
          {
            "name": "readerId",
            "in": "path",
            "required": true,
            "description": "ID of targeted reader",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#definitions/ReaderSessions"
            }
          }
        }
      }
    },
    "/reader/session": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["ReaderSessions"],
        "summary": "Add new session to the ReaderSession database",
        "parameters": [
          {
            "name": "session",
            "in": "body",
            "description": "Reader session that we want to create",
            "schema": {
              "$ref": "#definitions/ReaderSession"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "New reader session is created",
            "schema": {
              "#ref": "#definitions/ReaderSession"
            }
          }
        }
      }
    },
    "/reader/{readerId}/session/{sessionId}": {
      "parameters": [
        {
          "name": "readerId",
          "in": "path",
          "required": true,
          "description": "ID of targeted reader",
          "type": "string"
        },
        {
          "name": "sessionId",
          "in": "path",
          "required": true,
          "description": "ID of targeted reader session",
          "type": "string"
        }
      ],
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Use reader session id to find it in the Reader Session database",
        "tags": ["ReaderSessions"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#definitions/ReaderSession"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete reader session by ID from Reader session database",
        "tags": ["ReaderSessions"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Reader session is deleted",
            "schema": {
              "$ref": "#definitions/ReaderSession"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Reader session not found"
          }
        }
      }
    },
    "/reader/session/{sessionId}": {
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Use reader session id to update it in User Session databatase",
        "tags": ["ReaderSessions"],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "description": "ID of targeted reader session",
            "type": "string"
          },
          {
            "name": "session",
            "in": "body",
            "description": "Reader session with new values",
            "schema": {
              "$ref": "#definitions/ReaderSession"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Reader session is updated"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Reader session not found"
          }
        }
      }
    },

    "/reader/{readerId}/prizes/available": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["ReaderPrizes"],
        "parameters": [
          {
            "name": "readerId",
            "in": "path",
            "required": true,
            "description": "ID of targeted reader",
            "type": "string"
          }
        ],
        "summary": "Gets all prizes in Prizes database availble to this reader",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#definitions/ReaderPrizes"
            }
          }
        }
      }
    },
    "/reader/{readerId}/prizes/earned": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["ReaderPrizes"],
        "parameters": [
          {
            "name": "readerId",
            "in": "path",
            "required": true,
            "description": "ID of targeted reader",
            "type": "string"
          }
        ],
        "summary": "Gets all prize in Prizes database earned by this reader",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#definitions/ReaderPrizes"
            }
          }
        }
      }
    },

    "/prizes": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["ReaderPrizes"],
        "summary": "Gets all prize in Prizes database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#definitions/ReaderPrizes"
            }
          }
        }
      }
    },
    "/prize": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["ReaderPrizes"],
        "summary": "Add new prize to the ReaderPrize database",
        "parameters": [
          {
            "name": "prize",
            "in": "body",
            "description": "Reader prize that we want to create",
            "schema": {
              "$ref": "#definitions/ReaderPrize"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "New reader prize is created",
            "schema": {
              "#ref": "#definitions/ReaderPrize"
            }
          }
        }
      }
    },
    "/prize/{prizeId}/{readerId}": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["ReaderPrizes"],
        "summary": "Add new prize id to the Reader list in Reader Database",
        "parameters": [
          {
            "name": "prizeId",
            "in": "path",
            "required": true,
            "description": "ID of targeted reader prize",
            "type": "string"
          },
          {
            "name": "readerId",
            "in": "path",
            "required": true,
            "description": "ID of targeted reader",
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "Prize added to reader",
            "schema": {
              "#ref": "#definitions/ReaderPrize"
            }
          }
        }
      }
    },
    "/prize/{prizeId}": {
      "parameters": [
        {
          "name": "prizeId",
          "in": "path",
          "required": true,
          "description": "ID of targeted reader prize",
          "type": "string"
        }
      ],
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Use reader prize id to find it in the Reader Prize database",
        "tags": ["ReaderPrizes"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#definitions/ReaderPrize"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Use reader prize id to update it in User Prize database",
        "tags": ["ReaderPrizes"],
        "parameters": [
          {
            "name": "prize",
            "in": "body",
            "description": "Reader prize with new values",
            "schema": {
              "$ref": "#definitions/ReaderPrize"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Reader prize is updated"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Reader prize not found"
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete reader prize by ID from Reader prize database",
        "tags": ["ReaderPrizes"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Reader prize is deleted",
            "schema": {
              "$ref": "#definitions/ReaderPrize"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Reader prize not found"
          }
        }
      }
    },
    "/prize/{prizeId}/{readerId}/delete": {
      "parameters": [
        {
          "name": "readerId",
          "in": "path",
          "required": true,
          "description": "ID of targeted reader",
          "type": "string"
        },
        {
          "name": "prizeId",
          "in": "path",
          "required": true,
          "description": "ID of targeted reader prize",
          "type": "string"
        }
      ],
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete prize from Reader prize list in Reader database",
        "tags": ["ReaderPrizes"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Prize is deleted from Reader",
            "schema": {
              "$ref": "#definitions/ReaderPrize"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Reader prize not found"
          }
        }
      }
    },
    "/images": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["PrizeImages"],
        "summary": "Gets all prize images from database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#definitions/PrizeImages"
            }
          }
        }
      }
    },
    "/image": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["PrizeImages"],
        "summary": "Add new prize image to the prizeImage database",
        "parameters": [
          {
            "name": "image",
            "in": "body",
            "description": "Prize image that we want to create",
            "schema": {
              "$ref": "#definitions/PrizeImages"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "New prize image is created",
            "schema": {
              "#ref": "#definitions/PrizeImage"
            }
          }
        }
      }
    },
    "/image/{imageId}": {
      "parameters": [
        {
          "name": "imageId",
          "in": "path",
          "required": true,
          "description": "ID of targeted prize image",
          "type": "string"
        }
      ],
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Use prize image id to find it in the Prize Image database",
        "tags": ["PrizeImages"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#definitions/PrizeImage"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Use prize image id to update it in Prize Image database",
        "tags": ["PrizeImages"],
        "parameters": [
          {
            "name": "image",
            "in": "body",
            "description": "Prize image with new values",
            "schema": {
              "$ref": "#definitions/PrizeImage"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Prize image is updated"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Prize image not found"
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete prize image by ID from Prize Image database",
        "tags": ["PrizeImages"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Prize image is deleted",
            "schema": {
              "$ref": "#definitions/PrizeImage"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Prize image not found"
          }
        }
      }
    }
  },
  "definitions": {
    "NewUser": {
      "required": [
        "firstName",
        "lastName",
        "email",
        "password",
        "confirmPassword"
      ],
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "confirmPassword": {
          "type": "string"
        }
      }
    },
    "User": {
      "required": ["firstName", "lastName", "email", "password", "readers"],
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "readers": {
          "type": "array",
          "$ref": "#definitions/Readers"
        }
      }
    },
    "LoginUser": {
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Reader": {
      "required": [
        "parent_id",
        "reader_name",
        "theme_color",
        "total_reading_duration",
        "reading_coins",
        "reader_sessions",
        "reader_prizes"
      ],
      "properties": {
        "parent_id": {
          "type": "string"
        },
        "reader_name": {
          "type": "string"
        },
        "theme_color": {
          "type": "string"
        },
        "total_reading_duration": {
          "type": "number"
        },
        "reading_coins": {
          "type": "number"
        },
        "reader_sessions": {
          "type": "array",
          "$ref": "#definitions/ReaderSessions"
        },
        "reader_prizes": {
          "type": "array",
          "$ref": "#definitions/ReaderPrize"
        }
      }
    },
    "Readers": {
      "type": "array",
      "$ref": "#definitions/Reader"
    },
    "UpdateReader": {
      "required": ["reader_name", "theme_color"],
      "properties": {
        "reader_name": {
          "type": "string"
        },
        "theme_color": {
          "type": "string"
        }
      }
    },
    "ReaderSession": {
      "required": ["reader_id", "reading_duration", "session_date"],
      "properties": {
        "reader_id": {
          "type": "string"
        },
        "reading_duration": {
          "type": "number"
        },
        "session_date": {
          "type": "string"
        }
      }
    },
    "ReaderSessions": {
      "type": "array",
      "$ref": "#definitions/ReaderSessions"
    },
    "UpdateReaderSession": {
      "required": [
        "session_id",
        "reader_id",
        "reading_duration",
        "session_date"
      ],
      "properties": {
        "session_id": {
          "type": "string"
        },
        "reader_id": {
          "type": "string"
        },
        "reading_duration": {
          "type": "number"
        },
        "session_date": {
          "type": "string"
        }
      }
    },
    "ReaderPrize": {
      "required": [
        "creator_id",
        "prize_name",
        "prize_image",
        "reading_requirement",
        "readers"
      ],
      "properties": {
        "creator_id": {
          "type": "string"
        },
        "prize_name": {
          "type": "string"
        },
        "prize_image": {
          "type": "string"
        },
        "reading_requirement": {
          "type": "number"
        },
        "readers": {
          "type": "array",
          "$ref": "#definitions/Reader"
        }
      }
    },
    "ReaderPrizes": {
      "type": "array",
      "$ref": "#definitions/ReaderPrize"
    },
    "PrizeImage": {
      "required": ["creator_id", "image_path"],
      "properties": {
        "creator_id": {
          "type": "string"
        },
        "image_path": {
          "type": "string"
        }
      }
    },
    "PrizeImages": {
      "type": "array",
      "$ref": "#definitions/PrizeImage"
    }
  }
}
